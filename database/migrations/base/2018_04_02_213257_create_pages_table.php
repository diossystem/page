<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;
use Dios\System\Page\Enums\PageState;

/**
 * Pages of the application.
 *
 * Storages instances of pages of the application.
 */
class CreatePagesTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('pages', function (Blueprint $table) {
            $table->increments('id');
            $table->timestamps();

            /**
             * Дата публикации страницы.
             *
             * Может использовать как дату публикации или дата, с которой нужно
             * опубликовать страницу, если она имеет статус опубликованной страницы.
             */
            $table->timestamp('published_at')->nullable()->index();

            /**
             * Состояние страницы.
             *
             * Определяет доступность и готовность страницы.
             */
            $table->enum('state', PageState::list())->default(PageState::DRAFT)->index();
            //$table->string('state')->default(PageState::DRAFT)->index();

            /**
             * Человеко-понятный URL.
             *
             * Используется для создания запоминаемого URL.
             */
            $table->string('slug')->nullable()->index();

            /**
             * Ссылка на страницу.
             *
             * Ссылка на страницу используется для поиска страницы по указанному
             * URL.
             * Если на сайте используется древовидная система ссылок, то
             * в этом поле будет сохранена "полная" ссылка на страницу.
             * Если используется одиночная ссылка, то это поле будет
             * соответствовать значению поля slug.
             */
            $table->string('link')->nullable()->index();

            /**
             * Заголовок страницы или статьи.
             *
             * Реальное значение, которое используется в поисковых системах не
             * превышает 60 символов.
             */
            $table->string('title')->index();

            /**
             * Подзаголовок страницы статьи, девиз, слоган, второй заголовок страницы.
             *
             * Может использоваться в качестве других целей, чтобы избежать
             * дополнительных запросов к другим таблицам.
             */
            $table->string('subtitle')->nullable();

            /**
             * Описание страницы (анонс, аннотация, превью).
             *
             * Может использоваться вместе с контентом или отдельно от него.
             */
            $table->text('description')->nullable();

            /**
             * Содержание страницы (HTML контент, статья).
             *
             * Содержит HTML код.
             */
            $table->longText('content')->nullable();

            /**
             * Мета-тег description.
             *
             * Используется для отображения в поисковых системах (сниппет).
             * Желательно количество символов 130, но Яндекс отображает около 440.
             * При проверке данных длина строки ограничена 448 символами.
             */
            $table->string('description_tag')->nullable();

            /**
             * Мета-тег keywords.
             *
             * Ключевые слова страницы.
             * Может использоваться при поиске на сайте и некоторыми поисковыми
             * системами.
             */
            $table->string('keywords_tag')->nullable();

            /**
             * Шаблоны страницы.
             *
             * Ссылается на таблицу 'templates'.
             */
            $table->unsignedInteger('template_id')->nullable()->index();

            /**
             * Создатель страницы (автор страницы).
             *
             * Ссылается на таблицу 'users'.
             */
            $table->unsignedInteger('author_id')->index();

            /**
             * Редактор страницы (последний пользователь изменивший страницу).
             *
             * Ссылается на таблицу 'users'.
             */
            $table->unsignedInteger('editor_id')->index();

            /**
             * Родительская страница.
             *
             * Используется для создания серии страниц (статей, истории) или
             * иерархии принадлежности страниц.
             *
             * Может ссылаться на страницу указанного шаблона.
             * Например, все страницы услуг могут принадлежать странице "Услуги".
             * При загрузке страницы "Услуги" будут вызываться потомки страниц,
             * т.е. услуги.
             * Т.о. для разных языков можно создавать разные услуги или если
             * шаблон "Услуги" может иметь разные страницы, то все они будут
             * принадлежать разным группам и создавать иерархию принадлежности
             * услуг.
             */
            $table->unsignedInteger('parent_id')->nullable()->index();

            /**
             * Приоритет отображения.
             *
             * Для сортировки записей не использующих сортировку по дате.
             *
             * Например, для страницы списка услуг, где список услуг должен быть
             * в определенном порядке.
             */
            $table->smallInteger('priority')->default(0)->index();

            /**
             * Важная страница.
             *
             * Значение "true" означает важность этой страницы и может использоваться
             * при выдаче списка страниц. Например, вывести основные услуги,
             * важные записи, использование в автогенерации меню и т.д.
             * Отсутствие этого значения делает страницу обычной.
             */
            $table->boolean('important')->default(false);

            $table->index(['state', 'link']);
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('pages');
    }
}
