<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

/**
 * Additional fields
 *
 * Дополнительные поля используются для хранения дополнительной информации
 * относящейся к странице, и полей которых нет в основной таблице Страниц.
 * Каждое дополнительное поле имеет тип данных или может реализовывать
 * произвольный тип.
 * Тип данных помогает контролировать значение дополнительного поля,
 * а также может отвечать за шаблон представления хранимых данных.
 * Дополнительное поле является абстрактным понятием и может хранить в себе
 * любой набор текстовых данных, обычно преобразованных в JSON.
 * В отличии от обычных поле таблицы Страницы, по дополнительным поля затруднена
 * сортировка и выборка данных. Также эти поля загружаются по требованию
 * и не являются основной составляющей страницы.
 */
class CreateAdditionalFieldsTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('additional_fields', function (Blueprint $table) {
            $table->increments('id');

            /**
             * Уникальное имя дополнительного поля.
             *
             * Используется для вызова из функций для получения значения конкретного поля.
             * Также может использоваться определения шаблона редактирования,
             * проверки входных данных.
             */
            $table->string('code_name')->unique();

            /**
             * Название дополнительного поля.
             */
            $table->string('title');

            /**
             * Описание назначения (подсказка, инструкция).
             */
            $table->text('description')->nullable();

            /**
             * Описывает тип ввода (заполнения) данных.
             *
             * Каждому типу данных соответствует шаблон представления
             * и проверка данных (класс).
             * Значение "custom" соответствует шаблону с именем дополнительного
             * поля. У custom'ного поля нет проверки данных.
             * Представление поля может быть также изменено с помощью
             * шаблона представления с именем поля или изменением шаблона
             * представления типа данных.
             */
            $table->string('type')->default('custom');

            /**
             * Активность дополнительного поля.
             *
             * Неактивные дополнительные поля могут не отображаться
             * при редактировании страницы, на веб-сайте и при правке
             * дополнительных полей шаблона.
             */
            $table->boolean('active')->default(true)->index();
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('additional_fields');
    }
}
